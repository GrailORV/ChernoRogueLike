//=============================================================================
//
// アイテムの処理 [item.cpp]
// Author : UENO
//
//=============================================================================

#include "stdafx.h"
#include "item.h"
#include <stdio.h>
#include "debugproc.h"


//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的変数
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CItem::CItem()
{
	for (int nCountItem = 0; nCountItem < MAX_ITEM; nCountItem++)
	{
		m_item[nCountItem].m_nType = 0;
		m_item[nCountItem].m_nHaves = 0;
	}
	m_nItemNumber = 0;
}

//=============================================================================
// デストラクタ
//=============================================================================
CItem::~CItem()
{

}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CItem::Init(void)
{


	// ファイル構造体
	FILE *fp;

	//ファイル名指定
	char *fname = "data/CSV/Item.csv";

	//ファイルオープン
	fp = fopen(fname, "r");

	//ファイルが読み込めない場合
	if (!fp)
	{
		MessageBox(NULL, "アイテムデータを読み込めませんでした。\n", NULL, MB_OK);
	}

	for (int nCntItem_Y = 0; nCntItem_Y < MAX_ITEM; nCntItem_Y++)
	{
		//種類の読み込み
		fscanf_s(fp, "%d,", &m_item[nCntItem_Y].m_nType);

		//アイテムの所持状態を読み込み
		fscanf_s(fp, "%d,", &m_item[nCntItem_Y].m_nHaves);
	}

	fclose(fp);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CItem::Uninit()
{
}

//=============================================================================
// 更新処理
//=============================================================================
void CItem::Update(void) 
{
	CDebugProc::Print("アイテム：%d　所持：%d\n", m_item[m_nItemNumber].m_nType, m_item[m_nItemNumber].m_nHaves);
}