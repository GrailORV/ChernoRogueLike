//=============================================================================
//
// デバッグモードの処理 [debugMode.cpp]
// Author : SORA ENOMOTO
//
//=============================================================================
#include "stdafx.h"

#include "debugMode.h"
#include "manager.h"
#include "model.h"
#include "input.h"
#include "sound.h"
#include "debugproc.h"
#include "winApp.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// 静的変数
//*****************************************************************************


//=============================================================================
// CDebugModeコンストラクタ
//=============================================================================
CDebugMode::CDebugMode() :CMode("DebugMode"),
m_pModel(nullptr)
{
}

//=============================================================================
// CDebugModeデストラクタ
//=============================================================================
CDebugMode::~CDebugMode()
{
}

//=============================================================================
// 初期化
//=============================================================================
HRESULT CDebugMode::Init(void)
{
	CManager* pManager = reinterpret_cast<CManager*>(GetWindowLongPtr(CWinApp::GetHwnd(), GWLP_USERDATA));
	CSound* pSound = pManager->GetSound();

	m_pModel = CModel::Create(0, "butterfly", vector3NS::ZERO, vector3NS::ZERO);
	m_pModel->SetScale(Vector3(10.0f, 10.0f, 10.0f));

	pSound->Play(CSound::BGM_LABEL_NO_CURRY);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CDebugMode::Uninit(void)
{
	// オブジェクト破棄
	OnLostDevice();

	// オブジェクトの破棄
	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CDebugMode::Update(void)
{
	CDebugProc::Print("でばっぐもーどだょ\n");
}

//=============================================================================
// 描画処理
//=============================================================================
void CDebugMode::Draw(void)
{
}

//=============================================================================
// オブジェクト破棄
//=============================================================================
void CDebugMode::OnLostDevice(void)
{
	SafeUninit(m_pModel);
}

